class AdminConstraint
  def matches?(request)
    return false unless request.session[:current_admin_id].present?

    admin = Administrator.find_by(id: request.session[:current_admin_id])
    admin.present?
  end
end

Rails.application.routes.draw do
  # Health check endpoint for Fly.io
  get '/health', to: proc { [200, {}, ['OK']] }
  
  # Routes for activities generated by controller generator
  resources :activities, only: [:index]
  # End routes for activities

  # Routes for attractions generated by controller generator
  resources :attractions, only: [:index]
  # End routes for attractions

  # Routes for destinations generated by controller generator
  resources :destinations, only: [:index, :show]
  # End routes for destinations

  # write your business logic routes here

  root 'home#index'

  # Do not write business logic at admin dashboard
  namespace :admin do
    resources :activities
    resources :attractions
    resources :destinations
    resources :admin_oplogs, only: [:index, :show]
    resources :administrators
    get 'login', to: 'sessions#new', as: :login
    post 'login', to: 'sessions#create'
    delete 'logout', to: 'sessions#destroy', as: :logout
    resource :account, only: [:edit, :update]

    # Mount GoodJob dashboard
    mount GoodJob::Engine => 'good_job', :constraints => AdminConstraint.new

    root to: 'dashboard#index'
  end

  mount ActionCable.server => '/cable'
  match '*path', to: 'application#handle_routing_error', via: :get, constraints: lambda { |request| request.format.html? || request.format == :html }
end
